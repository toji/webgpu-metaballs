var G={"image/jpeg":"rgb8unorm","image/png":"rgba8unorm","image/apng":"rgba8unorm","image/gif":"rgba8unorm","image/bmp":"rgb8unorm","image/webp":"rgba8unorm","image/x-icon":"rgba8unorm","image/svg+xml":"rgba8unorm"},v=typeof createImageBitmap!="undefined",F=class{constructor(){}static supportedMIMETypes(){return Object.keys(G)}async fromUrl(e,r,t){let s=G[t.mimeType];if(e.supportedFormatList.indexOf(s)==-1&&(s="rgba8unorm"),v){let o=await fetch(r),a=await createImageBitmap(await o.blob());return e.fromImageBitmap(a,s,t)}else return new Promise((o,a)=>{let i=new Image;i.addEventListener("load",()=>{o(e.textureFromImageElement(i,s,t))}),i.addEventListener("error",function(h){a(h)}),i.src=r})}async fromBlob(e,r,t){let s=G[r.type];if(e.supportedFormatList.indexOf(s)==-1&&(s="rgba8unorm"),v){let o=await createImageBitmap(r);return e.fromImageBitmap(o,s,t)}else return new Promise((o,a)=>{let i=new Image;i.addEventListener("load",()=>{o(e.fromImageElement(i,s,t))}),i.addEventListener("error",function(d){a(d)});let h=window.URL.createObjectURL(r);i.src=h})}async fromBuffer(e,r,t){let s=new Blob(r,{type:t.mimeType});return this.fromBlob(e,s,t)}destroy(){}};var D=import.meta.url.replace(/[^\/]*$/,""),M=class{constructor(e,r,t,s){this.client=e,this.options=r,this.resolve=t,this.reject=s}},b={},C=1;function H(n){let e=b[n.data.id];if(!e){n.data.error&&console.error(`Texture load failed: ${n.data.error}`),console.error(`Invalid pending texture ID: ${n.data.id}`);return}if(delete b[n.data.id],n.data.error){console.error(`Texture load failed: ${n.data.error}`),e.reject(`${n.data.error}`);return}let r=e.client.fromTextureData(n.data,e.options);e.resolve(r)}var f=class{constructor(e){let r=`${D}${e}`;this.worker=new Worker(r),this.worker.onmessage=H}async fromUrl(e,r,t){let s=C++;return this.worker.postMessage({id:s,url:r,supportedFormats:e.supportedFormats(),mipmaps:t.mipmaps,extension:t.extension}),new Promise((o,a)=>{b[s]=new M(e,t,o,a)})}async fromBlob(e,r,t){let s=await r.arrayBuffer();return this.fromBuffer(e,s,t)}async fromBuffer(e,r,t){let s=C++;return this.worker.postMessage({id:s,buffer:r,supportedFormats:e.supportedFormats(),mipmaps:t.mipmaps,extension:t.extension}),new Promise((o,a)=>{b[s]=new M(e,t,o,a)})}destroy(){if(this.worker){this.worker.terminate();let e=new Error("Texture loader was destroyed.");for(let r of b)r.reject(e)}}};var c=WebGLRenderingContext,x={rgb8unorm:{canGenerateMipmaps:!0,gl:{format:c.RGB,type:c.UNSIGNED_BYTE,sizedFormat:32849}},rgba8unorm:{canGenerateMipmaps:!0,gl:{format:c.RGBA,type:c.UNSIGNED_BYTE,sizedFormat:32856}},"rgb8unorm-srgb":{canGenerateMipmaps:!0,gl:{format:c.RGBA,type:c.UNSIGNED_BYTE,sizedFormat:35907}},"rgba8unorm-srgb":{canGenerateMipmaps:!0,gl:{format:c.RGBA,type:c.UNSIGNED_BYTE,sizedFormat:35907}},rgb565unorm:{canGenerateMipmaps:!0,gl:{format:c.RGB,type:c.UNSIGNED_SHORT_5_6_5,sizedFormat:c.RGB565}},rgba4unorm:{canGenerateMipmaps:!0,gl:{format:c.RGBA,type:c.UNSIGNED_SHORT_4_4_4_4,sizedFormat:c.RGBA4}},rgba5551unorm:{canGenerateMipmaps:!0,gl:{format:c.RGBA,type:c.UNSIGNED_SHORT_5_5_5_1,sizedFormat:c.RGB5_A1}},bgra8unorm:{canGenerateMipmaps:!0},"bgra8unorm-srgb":{canGenerateMipmaps:!0},"bc1-rgb-unorm":{gl:{texStorage:!0,sizedFormat:33776},compressed:{blockBytes:8,blockWidth:4,blockHeight:4}},"bc2-rgba-unorm":{gl:{texStorage:!0,sizedFormat:33778},compressed:{blockBytes:16,blockWidth:4,blockHeight:4}},"bc3-rgba-unorm":{gl:{texStorage:!1,sizedFormat:33779},compressed:{blockBytes:16,blockWidth:4,blockHeight:4}},"bc7-rgba-unorm":{gl:{texStorage:!0,sizedFormat:36492},compressed:{blockBytes:16,blockWidth:4,blockHeight:4}},"etc1-rgb-unorm":{gl:{texStorage:!1,sizedFormat:36196},compressed:{blockBytes:8,blockWidth:4,blockHeight:4}},"etc2-rgba8unorm":{gl:{texStorage:!0,sizedFormat:37496},compressed:{blockBytes:16,blockWidth:4,blockHeight:4}},"astc-4x4-rgba-unorm":{gl:{texStorage:!0,sizedFormat:37808},compressed:{blockBytes:16,blockWidth:4,blockHeight:4}},"pvrtc1-4bpp-rgb-unorm":{gl:{texStorage:!1,sizedFormat:35840},compressed:{blockBytes:8,blockWidth:4,blockHeight:4}},"pvrtc1-4bpp-rgba-unorm":{gl:{texStorage:!1,sizedFormat:35842},compressed:{blockBytes:8,blockWidth:4,blockHeight:4}}};var _=class{constructor(e,r={}){this.texture=e,this.width=r.width||1,this.height=r.height||1,this.depth=r.depth||1,this.mipLevels=r.mipLevels||1,this.format=r.format||"rgba8unorm",this.type=r.type||"2d"}get glFormat(){return x[this.format].gl.format||null}get glSizedFormat(){return x[this.format].gl.sizedFormat}get glTarget(){switch(this.type){case"cube":return GL.TEXTURE_CUBE_MAP;case"2d":default:return GL.TEXTURE_2D}}},U=class{constructor(e,r,t,s=null,o={}){this.format=e,this.width=Math.max(1,r),this.height=Math.max(1,t),this.levels=[],s&&this.getLevel(0).setSlice(0,s,o)}getLevel(e,r={}){let t=this.levels[e];return t||(t=new W(this,e,r),this.levels[e]=t),t}},W=class{constructor(e,r,t){this.textureData=e,this.levelIndex=r,this.width=Math.max(1,t.width||this.textureData.width>>r),this.height=Math.max(1,t.height||this.textureData.height>>r),this.slices=[]}setSlice(e,r,t={}){if(this.slices[e]!=null)throw new Error("Cannot define an image slice twice.");let s=t.byteOffset||0,o=t.byteLength||0,a;r instanceof ArrayBuffer?(a=r,o||(o=a.byteLength-s)):(a=r.buffer,o||(o=r.byteLength-s),s+=r.byteOffset),this.slices[e]={buffer:a,byteOffset:s,byteLength:o}}},w=class{constructor(e,r){this.mimeTypes=e,this.callback=r,this.loader=null}getLoader(){return this.loader||(this.loader=this.callback()),this.loader}},j={jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",apng:"image/apng",gif:"image/gif",bmp:"image/bmp",webp:"image/webp",ico:"image/x-icon",cur:"image/x-icon",svg:"image/svg+xml",basis:"image/basis",ktx:"image/ktx",ktx2:"image/ktx2",dds:"image/vnd.ms-dds"},O=[new w(F.supportedMIMETypes(),()=>new F),new w(["image/basis"],()=>new f("workers/basis/basis-worker.js")),new w(["image/ktx","image/ktx2"],()=>new f("workers/ktx/ktx-worker.js")),new w(["image/vnd.ms-dds"],()=>new f("workers/dds-worker.js"))],m=Symbol("wtt/WebTextureClient"),E=Symbol("wtt/WebTextureLoaders"),I=document.createElement("a"),X=typeof createImageBitmap!="undefined",T={mimeType:null,mipmaps:!0,colorSpace:"default"};function S(n,e){if(!e)throw new Error("A valid MIME type must be specified.");let r=n[E][e];r||(r=n[E]["*"]);let t=r.getLoader();if(!t)throw new Error(`Failed to get loader for MIME type "${e}"`);return t}var R=class{constructor(e){this[m]=e,this[E]={};for(let r of O)for(let t of r.mimeTypes)this[E][t]=r;this[E]["*"]=O[0]}async fromUrl(e,r){if(!this[m])throw new Error("Cannot create new textures after object has been destroyed.");let t=Object.assign({},T,r);if(I.href=e,!t.mimeType){let o=I.pathname.lastIndexOf("."),a=o>-1?I.pathname.substring(o+1).toLowerCase():"*";t.mimeType=j[a]}return S(this,t.mimeType).fromUrl(this[m],I.href,t)}async fromBlob(e,r){if(!this[m])throw new Error("Cannot create new textures after object has been destroyed.");let t=Object.assign({},T,r);return S(this,e.type).fromBlob(this[m],e,t)}async fromBuffer(e,r){if(!this[m])throw new Error("Cannot create new textures after object has been destroyed.");let t=Object.assign({},T,r);if(!t.mimeType&&t.filename){let o=t.filename.lastIndexOf("."),a=o>-1?t.filename.substring(o+1).toLowerCase():null;t.mimeType=j[a]}return S(this,t.mimeType).fromBuffer(this[m],e,t)}async fromElement(e,r){if(!this[m])throw new Error("Cannot create new textures after object has been destroyed.");let t=Object.assign({},T,r);if(!X)return this[m].textureFromImageElement(e,"rgba8unorm",t);let s=await createImageBitmap(e);return this[m].fromImageBitmap(s,"rgba8unorm",t)}async fromImageBitmap(e,r){if(!this[m])throw new Error("Cannot create new textures after object has been destroyed.");let t=Object.assign({},T,r);return this[m].fromImageBitmap(e,"rgba8unorm",t)}fromColor(e,r,t,s=1,o="rgba8unorm"){if(!this[m])throw new Error("Cannot create new textures after object has been destroyed.");if(o!="rgba8unorm"&&o!="rgba8unorm-srgb")throw new Error('createTextureFromColor only supports "rgba8unorm" and "rgba8unorm-srgb" formats');let a=new Uint8Array([e*255,r*255,t*255,s*255]);return this[m].fromTextureData(new U(o,1,1,a),!1)}set allowCompressedFormats(e){this[m].allowCompressedFormats=!!e}get allowCompressedFormats(){return this[m].allowCompressedFormats}destroy(){this[m]&&(this[m].destroy(),this[m]=null)}};var k=WebGLRenderingContext;function B(n){return(n&n-1)==0}function P(n,e){return Math.floor(Math.log2(Math.max(n,e)))+1}function z(n){let e=x[n];if(!e||!e.gl)throw new Error(`No matching WebGL format for "${n}"`);return e}function $(n){switch(n){case"cube":return k.TEXTURE_CUBE_MAP;case"2d":default:return k.TEXTURE_2D}}var N=class extends R{constructor(e,r){super(new A(e),r)}},A=class{constructor(e){this.gl=e,this.isWebGL2=this.gl instanceof WebGL2RenderingContext,this.allowCompressedFormats=!0,this.extensions={astc:e.getExtension("WEBGL_compressed_texture_astc"),bptc:e.getExtension("EXT_texture_compression_bptc"),etc1:e.getExtension("WEBGL_compressed_texture_etc1"),etc2:e.getExtension("WEBGL_compressed_texture_etc"),pvrtc:e.getExtension("WEBGL_compressed_texture_pvrtc"),s3tc:e.getExtension("WEBGL_compressed_texture_s3tc")},this.uncompressedFormatList=["rgb8unorm","rgba8unorm","rgb565unorm","rgba4unorm"],this.supportedFormatList=["rgb8unorm","rgba8unorm","rgb565unorm","rgba4unorm"],this.isWebGL2?(this.uncompressedFormatList.push("rgb8unorm-srgb","rgba8unorm-srgb"),this.supportedFormatList.push("rgb8unorm-srgb","rgba8unorm-srgb")):(this.extensions.srgb=e.getExtension("EXT_sRGB"),this.extensions.srgb&&(this.uncompressedFormatList.push("rgb8unorm-srgb","rgba8unorm-srgb"),this.supportedFormatList.push("rgb8unorm-srgb","rgba8unorm-srgb"))),this.extensions.astc&&this.supportedFormatList.push("astc-4x4-rgba-unorm"),this.extensions.bptc&&this.supportedFormatList.push("bc7-rgba-unorm"),this.extensions.etc1&&this.supportedFormatList.push("etc1-rgb-unorm"),this.extensions.etc2&&this.supportedFormatList.push("etc2-rgba8unorm"),this.extensions.pvrtc&&this.supportedFormatList.push("pvrtc1-4bpp-rgb-unorm","pvrtc1-4bpp-rgba-unorm"),this.extensions.s3tc&&this.supportedFormatList.push("bc1-rgb-unorm","bc2-rgba-unorm","bc3-rgba-unorm")}supportedFormats(){return this.allowCompressedFormats?this.supportedFormatList:this.uncompressedFormatList}fromImageBitmap(e,r,t){let s=this.gl;if(!s)throw new Error("Cannot create new textures after object has been destroyed.");let o=t.mipmaps;!this.isWebGL2&&o&&(o=B(e.width)&&B(e.height));let a=o?P(e.width,e.height):1,i=z(r);if(i.compressed)throw new Error(`Cannot create texture from image with compressed format "${r}"`);let h=s.createTexture();return s.bindTexture(s.TEXTURE_2D,h),this.isWebGL2?(s.texStorage2D(s.TEXTURE_2D,a,i.gl.sizedFormat,e.width,e.height),s.texSubImage2D(s.TEXTURE_2D,0,0,0,i.gl.format,i.gl.type,e)):s.texImage2D(s.TEXTURE_2D,0,i.gl.format,i.gl.format,i.gl.type,e),a>1&&s.generateMipmap(s.TEXTURE_2D),new _(h,{width:e.width,height:e.height,mipLevels:a,format:r})}fromImageElement(e,r,t){return this.textureFromImageBitmap(e,r,t)}fromTextureData(e,r){let t=this.gl;if(!t)throw new Error("Cannot create new textures after object has been destroyed.");let s=z(e.format),o=r.mipmaps;s.compressed&&(o=!1),!this.isWebGL2&&o&&(o=B(e.width)&&B(e.height));let a=e.levels.length>1?e.levels.length:o?P(e.width,e.height):1,i=$(e.type),h=t.createTexture();t.bindTexture(i,h);let d=this.isWebGL2&&(!s.compressed||s.gl.texStorage);d&&t.texStorage2D(i,a,s.gl.sizedFormat,e.width,e.height);for(let l=0;l<e.levels.length;++l){let g=e.levels[l];for(let y=0;y<g.slices.length;++y){let u=g.slices[y],L=i==k.TEXTURE_CUBE_MAP?k.TEXTURE_CUBE_MAP_POSITIVE_X+y:i,p;switch(e.format){case"rgb565unorm":case"rgba4unorm":case"rgba5551unorm":p=new Uint16Array(u.buffer,u.byteOffset,u.byteLength/2);break;default:p=new Uint8Array(u.buffer,u.byteOffset,u.byteLength);break}s.compressed?d?t.compressedTexSubImage2D(L,l,0,0,g.width,g.height,s.gl.sizedFormat,p):t.compressedTexImage2D(L,l,s.gl.sizedFormat,g.width,g.height,0,p):d?t.texSubImage2D(L,l,0,0,g.width,g.height,s.gl.format,s.gl.type,p):t.texImage2D(L,l,s.gl.sizedFormat,g.width,g.height,0,s.gl.format,s.gl.type,p)}}return o&&e.levels.length==1&&t.generateMipmap(i),new _(h,{width:e.width,height:e.height,depth:e.depth,mipLevels:a,format:e.format,type:e.type})}destroy(){this.gl=null}};export{N as WebGLTextureLoader};
//# sourceMappingURL=webgl-texture-loader.js.map
